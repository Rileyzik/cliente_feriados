//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace cliente_feriados.feriados_sapo {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="HolidaySoap", Namespace="http://services.sapo.pt/Metadata/Holiday")]
    public partial class HolidaySoap : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAllHolidaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCarnivalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCorpusChristiOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEasterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGoodFridayOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHolidaysByMunicipalityIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLocalHolidaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNationalHolidaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegionalHolidaysOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public HolidaySoap() {
            this.Url = global::cliente_feriados.Properties.Settings.Default.cliente_feriados_feriados_sapo_Holiday;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAllHolidaysCompletedEventHandler GetAllHolidaysCompleted;
        
        /// <remarks/>
        public event GetCarnivalCompletedEventHandler GetCarnivalCompleted;
        
        /// <remarks/>
        public event GetCorpusChristiCompletedEventHandler GetCorpusChristiCompleted;
        
        /// <remarks/>
        public event GetEasterCompletedEventHandler GetEasterCompleted;
        
        /// <remarks/>
        public event GetGoodFridayCompletedEventHandler GetGoodFridayCompleted;
        
        /// <remarks/>
        public event GetHolidaysByMunicipalityIdCompletedEventHandler GetHolidaysByMunicipalityIdCompleted;
        
        /// <remarks/>
        public event GetLocalHolidaysCompletedEventHandler GetLocalHolidaysCompleted;
        
        /// <remarks/>
        public event GetNationalHolidaysCompletedEventHandler GetNationalHolidaysCompleted;
        
        /// <remarks/>
        public event GetRegionalHolidaysCompletedEventHandler GetRegionalHolidaysCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.sapo.pt/Metadata/Holiday/GetAllHolidays", RequestNamespace="http://services.sapo.pt/Metadata/Holiday", ResponseNamespace="http://services.sapo.pt/Metadata/Holiday", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Holiday[] GetAllHolidays(int year) {
            object[] results = this.Invoke("GetAllHolidays", new object[] {
                        year});
            return ((Holiday[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllHolidaysAsync(int year) {
            this.GetAllHolidaysAsync(year, null);
        }
        
        /// <remarks/>
        public void GetAllHolidaysAsync(int year, object userState) {
            if ((this.GetAllHolidaysOperationCompleted == null)) {
                this.GetAllHolidaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllHolidaysOperationCompleted);
            }
            this.InvokeAsync("GetAllHolidays", new object[] {
                        year}, this.GetAllHolidaysOperationCompleted, userState);
        }
        
        private void OnGetAllHolidaysOperationCompleted(object arg) {
            if ((this.GetAllHolidaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllHolidaysCompleted(this, new GetAllHolidaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.sapo.pt/Metadata/Holiday/GetCarnival", RequestNamespace="http://services.sapo.pt/Metadata/Holiday", ResponseNamespace="http://services.sapo.pt/Metadata/Holiday", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Holiday GetCarnival(int year) {
            object[] results = this.Invoke("GetCarnival", new object[] {
                        year});
            return ((Holiday)(results[0]));
        }
        
        /// <remarks/>
        public void GetCarnivalAsync(int year) {
            this.GetCarnivalAsync(year, null);
        }
        
        /// <remarks/>
        public void GetCarnivalAsync(int year, object userState) {
            if ((this.GetCarnivalOperationCompleted == null)) {
                this.GetCarnivalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCarnivalOperationCompleted);
            }
            this.InvokeAsync("GetCarnival", new object[] {
                        year}, this.GetCarnivalOperationCompleted, userState);
        }
        
        private void OnGetCarnivalOperationCompleted(object arg) {
            if ((this.GetCarnivalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCarnivalCompleted(this, new GetCarnivalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.sapo.pt/Metadata/Holiday/GetCorpusChristi", RequestNamespace="http://services.sapo.pt/Metadata/Holiday", ResponseNamespace="http://services.sapo.pt/Metadata/Holiday", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Holiday GetCorpusChristi(int year) {
            object[] results = this.Invoke("GetCorpusChristi", new object[] {
                        year});
            return ((Holiday)(results[0]));
        }
        
        /// <remarks/>
        public void GetCorpusChristiAsync(int year) {
            this.GetCorpusChristiAsync(year, null);
        }
        
        /// <remarks/>
        public void GetCorpusChristiAsync(int year, object userState) {
            if ((this.GetCorpusChristiOperationCompleted == null)) {
                this.GetCorpusChristiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCorpusChristiOperationCompleted);
            }
            this.InvokeAsync("GetCorpusChristi", new object[] {
                        year}, this.GetCorpusChristiOperationCompleted, userState);
        }
        
        private void OnGetCorpusChristiOperationCompleted(object arg) {
            if ((this.GetCorpusChristiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCorpusChristiCompleted(this, new GetCorpusChristiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.sapo.pt/Metadata/Holiday/GetEaster", RequestNamespace="http://services.sapo.pt/Metadata/Holiday", ResponseNamespace="http://services.sapo.pt/Metadata/Holiday", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Holiday GetEaster(int year) {
            object[] results = this.Invoke("GetEaster", new object[] {
                        year});
            return ((Holiday)(results[0]));
        }
        
        /// <remarks/>
        public void GetEasterAsync(int year) {
            this.GetEasterAsync(year, null);
        }
        
        /// <remarks/>
        public void GetEasterAsync(int year, object userState) {
            if ((this.GetEasterOperationCompleted == null)) {
                this.GetEasterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEasterOperationCompleted);
            }
            this.InvokeAsync("GetEaster", new object[] {
                        year}, this.GetEasterOperationCompleted, userState);
        }
        
        private void OnGetEasterOperationCompleted(object arg) {
            if ((this.GetEasterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEasterCompleted(this, new GetEasterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.sapo.pt/Metadata/Holiday/GetGoodFriday", RequestNamespace="http://services.sapo.pt/Metadata/Holiday", ResponseNamespace="http://services.sapo.pt/Metadata/Holiday", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Holiday GetGoodFriday(int year) {
            object[] results = this.Invoke("GetGoodFriday", new object[] {
                        year});
            return ((Holiday)(results[0]));
        }
        
        /// <remarks/>
        public void GetGoodFridayAsync(int year) {
            this.GetGoodFridayAsync(year, null);
        }
        
        /// <remarks/>
        public void GetGoodFridayAsync(int year, object userState) {
            if ((this.GetGoodFridayOperationCompleted == null)) {
                this.GetGoodFridayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGoodFridayOperationCompleted);
            }
            this.InvokeAsync("GetGoodFriday", new object[] {
                        year}, this.GetGoodFridayOperationCompleted, userState);
        }
        
        private void OnGetGoodFridayOperationCompleted(object arg) {
            if ((this.GetGoodFridayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGoodFridayCompleted(this, new GetGoodFridayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.sapo.pt/Metadata/Holiday/GetHolidaysByMunicipalityId", RequestNamespace="http://services.sapo.pt/Metadata/Holiday", ResponseNamespace="http://services.sapo.pt/Metadata/Holiday", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Holiday[] GetHolidaysByMunicipalityId(int year, string municipalityId, bool includeNational, [System.Xml.Serialization.XmlIgnoreAttribute()] bool includeNationalSpecified) {
            object[] results = this.Invoke("GetHolidaysByMunicipalityId", new object[] {
                        year,
                        municipalityId,
                        includeNational,
                        includeNationalSpecified});
            return ((Holiday[])(results[0]));
        }
        
        /// <remarks/>
        public void GetHolidaysByMunicipalityIdAsync(int year, string municipalityId, bool includeNational, bool includeNationalSpecified) {
            this.GetHolidaysByMunicipalityIdAsync(year, municipalityId, includeNational, includeNationalSpecified, null);
        }
        
        /// <remarks/>
        public void GetHolidaysByMunicipalityIdAsync(int year, string municipalityId, bool includeNational, bool includeNationalSpecified, object userState) {
            if ((this.GetHolidaysByMunicipalityIdOperationCompleted == null)) {
                this.GetHolidaysByMunicipalityIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHolidaysByMunicipalityIdOperationCompleted);
            }
            this.InvokeAsync("GetHolidaysByMunicipalityId", new object[] {
                        year,
                        municipalityId,
                        includeNational,
                        includeNationalSpecified}, this.GetHolidaysByMunicipalityIdOperationCompleted, userState);
        }
        
        private void OnGetHolidaysByMunicipalityIdOperationCompleted(object arg) {
            if ((this.GetHolidaysByMunicipalityIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHolidaysByMunicipalityIdCompleted(this, new GetHolidaysByMunicipalityIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.sapo.pt/Metadata/Holiday/GetLocalHolidays", RequestNamespace="http://services.sapo.pt/Metadata/Holiday", ResponseNamespace="http://services.sapo.pt/Metadata/Holiday", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Holiday[] GetLocalHolidays(int year) {
            object[] results = this.Invoke("GetLocalHolidays", new object[] {
                        year});
            return ((Holiday[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLocalHolidaysAsync(int year) {
            this.GetLocalHolidaysAsync(year, null);
        }
        
        /// <remarks/>
        public void GetLocalHolidaysAsync(int year, object userState) {
            if ((this.GetLocalHolidaysOperationCompleted == null)) {
                this.GetLocalHolidaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLocalHolidaysOperationCompleted);
            }
            this.InvokeAsync("GetLocalHolidays", new object[] {
                        year}, this.GetLocalHolidaysOperationCompleted, userState);
        }
        
        private void OnGetLocalHolidaysOperationCompleted(object arg) {
            if ((this.GetLocalHolidaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLocalHolidaysCompleted(this, new GetLocalHolidaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.sapo.pt/Metadata/Holiday/GetNationalHolidays", RequestNamespace="http://services.sapo.pt/Metadata/Holiday", ResponseNamespace="http://services.sapo.pt/Metadata/Holiday", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Holiday[] GetNationalHolidays(int year) {
            object[] results = this.Invoke("GetNationalHolidays", new object[] {
                        year});
            return ((Holiday[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNationalHolidaysAsync(int year) {
            this.GetNationalHolidaysAsync(year, null);
        }
        
        /// <remarks/>
        public void GetNationalHolidaysAsync(int year, object userState) {
            if ((this.GetNationalHolidaysOperationCompleted == null)) {
                this.GetNationalHolidaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNationalHolidaysOperationCompleted);
            }
            this.InvokeAsync("GetNationalHolidays", new object[] {
                        year}, this.GetNationalHolidaysOperationCompleted, userState);
        }
        
        private void OnGetNationalHolidaysOperationCompleted(object arg) {
            if ((this.GetNationalHolidaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNationalHolidaysCompleted(this, new GetNationalHolidaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.sapo.pt/Metadata/Holiday/GetRegionalHolidays", RequestNamespace="http://services.sapo.pt/Metadata/Holiday", ResponseNamespace="http://services.sapo.pt/Metadata/Holiday", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Holiday[] GetRegionalHolidays(int year) {
            object[] results = this.Invoke("GetRegionalHolidays", new object[] {
                        year});
            return ((Holiday[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRegionalHolidaysAsync(int year) {
            this.GetRegionalHolidaysAsync(year, null);
        }
        
        /// <remarks/>
        public void GetRegionalHolidaysAsync(int year, object userState) {
            if ((this.GetRegionalHolidaysOperationCompleted == null)) {
                this.GetRegionalHolidaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegionalHolidaysOperationCompleted);
            }
            this.InvokeAsync("GetRegionalHolidays", new object[] {
                        year}, this.GetRegionalHolidaysOperationCompleted, userState);
        }
        
        private void OnGetRegionalHolidaysOperationCompleted(object arg) {
            if ((this.GetRegionalHolidaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegionalHolidaysCompleted(this, new GetRegionalHolidaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="HolidaySoapSecure", Namespace="http://services.sapo.pt/Metadata/Holiday")]
    public partial class HolidaySoapSecure : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAllHolidaysOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public HolidaySoapSecure() {
            this.Url = "https://services.sapo.pt/Holiday";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAllHolidaysCompletedEventHandler GetAllHolidaysCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.sapo.pt/Metadata/Holiday/GetAllHolidays", RequestNamespace="http://services.sapo.pt/Metadata/Holiday", ResponseNamespace="http://services.sapo.pt/Metadata/Holiday", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Holiday[] GetAllHolidays(int year) {
            object[] results = this.Invoke("GetAllHolidays", new object[] {
                        year});
            return ((Holiday[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllHolidaysAsync(int year) {
            this.GetAllHolidaysAsync(year, null);
        }
        
        /// <remarks/>
        public void GetAllHolidaysAsync(int year, object userState) {
            if ((this.GetAllHolidaysOperationCompleted == null)) {
                this.GetAllHolidaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllHolidaysOperationCompleted);
            }
            this.InvokeAsync("GetAllHolidays", new object[] {
                        year}, this.GetAllHolidaysOperationCompleted, userState);
        }
        
        private void OnGetAllHolidaysOperationCompleted(object arg) {
            if ((this.GetAllHolidaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllHolidaysCompleted(this, new GetAllHolidaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.sapo.pt/Metadata/Holiday")]
    public partial class Holiday {
        
        private string nameField;
        
        private System.DateTime dateField;
        
        private bool dateFieldSpecified;
        
        private string descriptionField;
        
        private HolidayType typeField;
        
        private bool typeFieldSpecified;
        
        private Municipality municipalityField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateSpecified {
            get {
                return this.dateFieldSpecified;
            }
            set {
                this.dateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public HolidayType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Municipality Municipality {
            get {
                return this.municipalityField;
            }
            set {
                this.municipalityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.sapo.pt/Metadata/Holiday")]
    public enum HolidayType {
        
        /// <remarks/>
        National,
        
        /// <remarks/>
        Municipal,
        
        /// <remarks/>
        Regional,
        
        /// <remarks/>
        Religious,
        
        /// <remarks/>
        Optional,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.sapo.pt/Metadata/Holiday")]
    public partial class Municipality {
        
        private string idField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetAllHolidaysCompletedEventHandler(object sender, GetAllHolidaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllHolidaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllHolidaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Holiday[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Holiday[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetCarnivalCompletedEventHandler(object sender, GetCarnivalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCarnivalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCarnivalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Holiday Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Holiday)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetCorpusChristiCompletedEventHandler(object sender, GetCorpusChristiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCorpusChristiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCorpusChristiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Holiday Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Holiday)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetEasterCompletedEventHandler(object sender, GetEasterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Holiday Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Holiday)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetGoodFridayCompletedEventHandler(object sender, GetGoodFridayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGoodFridayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGoodFridayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Holiday Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Holiday)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetHolidaysByMunicipalityIdCompletedEventHandler(object sender, GetHolidaysByMunicipalityIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHolidaysByMunicipalityIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHolidaysByMunicipalityIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Holiday[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Holiday[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetLocalHolidaysCompletedEventHandler(object sender, GetLocalHolidaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLocalHolidaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLocalHolidaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Holiday[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Holiday[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetNationalHolidaysCompletedEventHandler(object sender, GetNationalHolidaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNationalHolidaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNationalHolidaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Holiday[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Holiday[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetRegionalHolidaysCompletedEventHandler(object sender, GetRegionalHolidaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegionalHolidaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegionalHolidaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Holiday[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Holiday[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591